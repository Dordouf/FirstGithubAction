name: Azure - Create Resource Group
run-name: ${{ github.actor }} is running workflow Create Resource Group
on:
  workflow_dispatch:
    inputs:
      resourceGroupName:
        description: "Resource Group Name"
        required: true
        type: string
env:
  RGNAME: ${{ github.event.inputs.resourceGroupName }}
  CLIENTID: ${{ secrets.CLIENTID }}
  CLIENTSECRET: ${{ secrets.CLIENTSECRET}}
  TENANTID: ${{ vars.TENANTID}}
  SUBSCRIPTIONID: ${{ vars.SUBSCRIPTIONID }}


# https://github.com/marketplace/actions/azure-login
jobs:
  jobs:
    runs-on: ubuntu-latest
    steps:
      #- name: Azure Login
      #  uses: azure/login@v2
      #  with:
      #    creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Install Required Modules
        shell: pwsh
        run: |
          Write-Host "Installation of required modules"
          $requiredModules = @{
            "Az.Accounts"  = "5.0.0"
            "Az.Resources" = "8.0.0"
          }
          
          ForEach ($currentModule in $requiredModules.GetEnumerator())
          {
            Write-Host "Installing module $($currentModule.Key) with version $($currentModule.Value)"
            Install-Module -Name $($currentModule.Key) -RequiredVersion $($currentModule.Value) -Confirm:$false -Force
          }
      
      - name: Connect to Azure
        shell: pwsh
        run: |

          $pwd  = ConvertTo-SecureString $env:CLIENTSECRET -AsPlainText -Force
          $cred = New-Object System.Management.Automation.PSCredential($env:CLIENTID,$pwd)

          Connect-AzAccount -ServicePrincipal -TenantId $env:TENANTID -SubscriptionId $env:SUBSCRIPTIONID -Credential $cred

      - name: Azure Context
        shell: pwsh
        run: |
          Get-AzContext
      
      - name: Create RG
        shell: pwsh
        run: |
          Write-Host "Create of RG : $($env:RGNAME)"
          New-AzResourceGroup -Name $env:RGNAME -Location "North Europe"
      
      #- name: Azure Context
      #  uses: azure/powershell@v2
      #  with:
      #    azPSVersion: "latest"
      #    inlineScript: |
      #      Get-AzContext
    
        


